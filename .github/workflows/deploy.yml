name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  Deployment:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: '.'
          fetch-depth: 0
          show-progress: 'true'

      - name: Create .env file
        run: |
          touch apps/whatsapp/.env
          echo "PORT=${{ secrets.WK_WP_PORT }}" >> apps/whatsapp/.env
          echo "MONGODB_URI=${{ secrets.WK_WP_MONGODB_URI }}" >> apps/whatsapp/.env
          echo "DATABASE_URL=${{ secrets.WK_WP_DATABASE_URL }}" >> apps/whatsapp/.env
          echo "S3_ACCESS_KEY=${{ secrets.WK_WP_S3_ACCESS_KEY }}" >> apps/whatsapp/.env
          echo "S3_SECRET_ACCESS_KEY=${{ secrets.WK_WP_S3_SECRET_ACCESS_KEY }}" >> apps/whatsapp/.env
          echo "S3_REGION=${{ secrets.WK_WP_S3_REGION }}" >> apps/whatsapp/.env
          echo "S3_BUCKET_NAME=${{ secrets.WK_WP_S3_BUCKET_NAME }}" >> apps/whatsapp/.env
          echo "APP_KEY=${{ secrets.WK_WP_APP_KEY }}" >> apps/whatsapp/.env

      - name: Validate Files
        run: ls -la && ls -la apps/whatsapp

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Container Build and Push
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/whatsapp-webhook:latest -f apps/whatsapp/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/whatsapp-webhook:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIV_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/whatsapp-webhook:latest
            docker stop webhook-whatsapp-container
            docker rm webhook-whatsapp-container
            docker run -d --name webhook-whatsapp-container -p ${{ secrets.CT_WK_WP_PORT }}:${{ secrets.WK_WP_PORT }} ${{ secrets.DOCKER_USERNAME }}/whatsapp-webhook:latest

            if docker ps | grep webhook-whatsapp-container; then
              echo "Container is running successfully"
            else
              echo "Failed to start container"
              exit 1
            fi

      - name: Prune System
        run: 'echo y | docker system prune -a | docker image prune -a -f'
